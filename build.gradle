import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.cadixdev.licenser' version '0.6.1' apply false
    id 'org.ajoberstar.grgit' version '5.2.0'
    id 'checkstyle'
    id 'maven-publish'
    id 'java'
}

ext {
    set 'version', version.toString()
    set 'description', description.toString()
}

group = 'org.alexdev'
version = "$ext.version"
description = "$ext.description"



allprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
//    apply plugin: 'checkstyle'
    apply plugin: 'java'

    compileJava.options.encoding = 'UTF-8'
    compileJava.options.release.set 17
    javadoc.options.encoding = 'UTF-8'

    checkstyle {
        toolVersion = '10.12.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://repo.william278.net/snapshots/' }
        maven { url 'https://repo.papermc.io/repository/maven-public/' }
        maven { url 'https://jitpack.io' }
        maven {
            name = "spigotmc-repo"
            url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        }
        maven { url "https://repo.dmulloy2.net/repository/public/" }
        maven { url = 'https://repo.minebench.de/'}
        maven {
            url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
        }
    }

    processResources {
        filesMatching(['**/*.json', '**/*.yml']) {
            filter ReplaceTokens as Class, beginToken: '${', endToken: '}',
                    tokens: rootProject.ext.properties
        }
    }
}

subprojects {
    version rootProject.version
    archivesBaseName = "${rootProject.name}-${project.name.capitalize()}"
    compileJava.options.encoding = 'UTF-8'

    jar {
        from '../LICENSE'
    }

    if (['velocity', 'spigot'].contains(project.name)) {
        shadowJar {
            destinationDirectory.set(file("$rootDir/target"))
            archiveClassifier.set('')
        }

        jar.dependsOn shadowJar
        clean.delete "$rootDir/target"
    }


}